{"version":3,"sources":["webpack:///./refs/refs.js","webpack:///./fetchCountries.js","webpack:///./index.js","webpack:///./components/create-markup.js"],"names":["refs","input","document","querySelector","container","fetchCountries","searchQuery","fetch","then","data","json","catch","error","console","log","defaultModules","set","PNotifyMobile","clearMarkup","innerHTML","addEventListener","_","value","dataLength","length","text","dataHandler","countries","markup","name","capital","languages","reduce","acc","li","flag","updateMarkup"],"mappings":"yIAAaA,G,UAAO,CAClBC,MAAOC,SAASC,cAAc,UAC9BC,UAAWF,SAASC,cAAc,gBCOrBE,G,wCALQ,SAAAC,GACrB,OAAOC,MAAM,yCAAyCD,GACnDE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,wDCIhCG,iBAAeC,IAAIC,EAAe,IASlC,IAkBMC,EAAc,WAClBlB,EAAKI,UAAUe,UAAY,IAM7BnB,EAAKC,MAAMmB,iBACT,QACAC,YAAW,WACLrB,EAAKC,MAAMqB,MACbjB,EAAeL,EAAKC,MAAMqB,OACvBd,MAAK,SAAAC,GAAI,OA9BE,SAAAA,GAClB,IAAMc,EAAad,EAAKe,OAExB,GADAX,QAAQC,IAAIL,GACRc,EAAa,GACfL,IACAN,gBAAM,CACJa,KACE,8EAEC,IAAIF,GAAc,GAAKA,GAAc,GAC1C,OAAOd,EAEPS,IACAN,gBAAM,CACJa,KAAM,sBAgBUC,CAAYjB,MACzBD,MAAK,SAAAC,GAAI,OAVG,SAAAA,GACnB,IC1C0BkB,ED0CpBC,ECzCmB,KADCD,ED0CElB,GCzCde,OAEV,aACIG,EAAU,GAAGE,KADjB,aAEDF,EAAU,GAAGG,QAFZ,+BAKAH,EAAU,GAAGI,UAAUC,QAAO,SAACC,EAAKC,GAElC,OADAD,GAAO,OAAOC,EAAGL,KAAd,UAEF,IARH,oBAUMF,EAAU,GAAGQ,KAVnB,oBAU2CR,EAAU,GAAGE,KAVxD,eAaOF,EAAUH,QAAU,GAE3B,mBAEAG,EAAUK,QAAO,SAACC,EAAKC,GAErB,OADAD,GAAO,OAAOC,EAAGL,KAAd,UAEF,IALH,mBAFG,ED2BP7B,EAAKI,UAAUe,UAAYS,EAQPQ,CAAa3B,MAC1BE,OAAM,SAAAC,GACLM,OAECA,MACN,Q","file":"main.fe1dded6ba3e9a50daed.js","sourcesContent":["export const refs = {\r\n  input: document.querySelector('#input'),\r\n  container: document.querySelector('.container'),\r\n};\r\n","import { refs } from './refs/refs.js';\r\nimport { createMarkup } from './components/create-markup.js';\r\n// import { myError } from './components/alert.js';\r\n\r\nconst fetchCountries = searchQuery => {\r\n  return fetch(`https://restcountries.eu/rest/v2/name/${searchQuery}`)\r\n    .then(data => data.json())\r\n    .catch(error => console.log(error));\r\n};\r\nexport default fetchCountries;\r\n// const dataHandler = data => {\r\n//   const dataLength = data.length;\r\n//   const promise = new Promise((resolve, reject) => {\r\n//     if (dataLength <= 10) {\r\n//       resolve(data);\r\n//     } else reject(data);\r\n//   });\r\n//   console.log(data);\r\n//   return promise;\r\n// };\r\n// const fetchCountries = searchQuery => {\r\n//   if (searchQuery) {\r\n//     fetch(`https://restcountries.eu/rest/v2/name/${searchQuery}`)\r\n//       .then(res => res.json())\r\n//       .then(data => dataHandler(data))\r\n//       .then(data => updateMarkup(data))\r\n//       .catch(() => {\r\n//         clearMarkup();\r\n//         return error({\r\n//           text:\r\n//             'Too many countries found. Please provide a more specific search query',\r\n//         });\r\n//       });\r\n//   } else clearMarkup();\r\n// };\r\n// export default fetchCountries;\r\n// const clearMarkup = () => {\r\n//   refs.container.innerHTML = '';\r\n// };\r\n// const updateMarkup = data => {\r\n//   const markup = createMarkup(data);\r\n//   refs.container.innerHTML = markup;\r\n// };\r\n","import * as _ from 'lodash';\r\nimport './styles.css';\r\nimport { refs } from './refs/refs.js';\r\n// import { myError } from './components/alert.js';\r\nimport fetchCountries from './fetchCountries.js';\r\nimport { createMarkup } from './components/create-markup.js';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport '@pnotify/confirm/dist/PNotifyConfirm.css';\r\nimport { error, defaultModules } from '@pnotify/core/dist/PNotify';\r\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\r\ndefaultModules.set(PNotifyMobile, {});\r\n// refs.input.addEventListener(\r\n//   'input',\r\n//   _.debounce(fetchCountries(refs.input.value), 500),\r\n// );\r\n\r\n// const fetchCountries = searchQuery => {\r\n//   return fetch(`https://restcountries.eu/rest/v2/name/${searchQuery}`);\r\n// };\r\nconst dataHandler = data => {\r\n  const dataLength = data.length;\r\n  console.log(data);\r\n  if (dataLength > 10) {\r\n    clearMarkup();\r\n    error({\r\n      text:\r\n        'Too many countries found. Please provide a more specific search query',\r\n    });\r\n  } else if (dataLength >= 1 && dataLength <= 10) {\r\n    return data;\r\n  } else {\r\n    clearMarkup();\r\n    error({\r\n      text: 'No country found',\r\n    });\r\n  }\r\n};\r\nconst clearMarkup = () => {\r\n  refs.container.innerHTML = '';\r\n};\r\nconst updateMarkup = data => {\r\n  const markup = createMarkup(data);\r\n  refs.container.innerHTML = markup;\r\n};\r\nrefs.input.addEventListener(\r\n  'input',\r\n  _.debounce(() => {\r\n    if (refs.input.value) {\r\n      fetchCountries(refs.input.value)\r\n        .then(data => dataHandler(data))\r\n        .then(data => updateMarkup(data))\r\n        .catch(error => {\r\n          clearMarkup();\r\n        });\r\n    } else clearMarkup();\r\n  }, 500),\r\n);\r\n\r\n// fetch('https://restcountries.eu/rest/v2/name/est');\r\n","export const createMarkup = countries => {\r\n  if (countries.length === 1) {\r\n    const markup =\r\n      `\r\n    <h2>${countries[0].name}</h2>\r\n<p>${countries[0].capital}</p>\r\n<p>Languages</p>\r\n<ul>` +\r\n      countries[0].languages.reduce((acc, li) => {\r\n        acc += `<li>${li.name}</li>`;\r\n        return acc;\r\n      }, '') +\r\n      `</ul>\r\n<img src=\"${countries[0].flag}\" width=320 alt=\"${countries[0].name}'s flag\">\r\n`;\r\n    return markup;\r\n  } else if (countries.length <= 10) {\r\n    const markup =\r\n      `\r\n          <ul>` +\r\n      countries.reduce((acc, li) => {\r\n        acc += `<li>${li.name}</li>`;\r\n        return acc;\r\n      }, '') +\r\n      `</ul>\r\n    `;\r\n    return markup;\r\n  }\r\n};\r\n"],"sourceRoot":""}